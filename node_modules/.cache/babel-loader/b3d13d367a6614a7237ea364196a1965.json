{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/olive/Uni/Projects/ifetch-chatApplication/chat_application/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _defineProperty from \"C:/Users/olive/Uni/Projects/ifetch-chatApplication/chat_application/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/olive/Uni/Projects/ifetch-chatApplication/chat_application/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState as n, useEffect as t, useCallback as r } from \"react\";\nfunction e(e, o, c) {\n  var _n = n(function () {\n      return \"function\" == typeof o ? o() : o;\n    }),\n    _n2 = _slicedToArray(_n, 1),\n    s = _n2[0],\n    _n3 = n(c),\n    _n4 = _slicedToArray(_n3, 1),\n    u = _n4[0],\n    _n5 = n(s),\n    _n6 = _slicedToArray(_n5, 2),\n    i = _n6[0],\n    f = _n6[1],\n    _n7 = n(!0),\n    _n8 = _slicedToArray(_n7, 2),\n    a = _n8[0],\n    h = _n8[1],\n    _n9 = n(\"\"),\n    _n10 = _slicedToArray(_n9, 2),\n    m = _n10[0],\n    l = _n10[1];\n  t(function () {\n    (function (n, t, r) {\n      var e = void 0 === t ? n : _defineProperty({}, n, t);\n      return new Promise(function (t, o) {\n        chrome.storage[r].get(e, function (r) {\n          var e = chrome.runtime.lastError;\n          if (e) return o(e);\n          t(r[n]);\n        });\n      });\n    })(e, s, u).then(function (n) {\n      f(n), h(!0), l(\"\");\n    }).catch(function (n) {\n      h(!1), l(n);\n    });\n  }, [e, s, u]);\n  var g = r(function (n) {\n    var t = \"function\" == typeof n ? n(i) : n;\n    (function (n, t, r) {\n      return new Promise(function (e, o) {\n        chrome.storage[r].set(_defineProperty({}, n, t), function () {\n          var n = chrome.runtime.lastError;\n          n ? o(n) : e();\n        });\n      });\n    })(e, t, u).then(function () {\n      h(!0), l(\"\");\n    }).catch(function (n) {\n      f(t), h(!1), l(n);\n    });\n  }, [u, e, i]);\n  return t(function () {\n    var n = function n(_n11, t) {\n      t === u && e in _n11 && (f(_n11[e].newValue), h(!0), l(\"\"));\n    };\n    return chrome.storage.onChanged.addListener(n), function () {\n      chrome.storage.onChanged.removeListener(n);\n    };\n  }, [e, u]), [i, g, a, m];\n}\nfunction o(n, o, c) {\n  var s = [];\n  return function () {\n    var _e = e(n, o, c),\n      _e2 = _slicedToArray(_e, 4),\n      u = _e2[0],\n      i = _e2[1],\n      f = _e2[2],\n      a = _e2[3],\n      h = r(function (n) {\n        var _iterator = _createForOfIteratorHelper(s),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _t = _step.value;\n            _t(n);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }, []);\n    return t(function () {\n      return s.push(i), function () {\n        s.splice(s.indexOf(i), 1);\n      };\n    }, [i]), [u, h, f, a];\n  };\n}\nfunction c(n, t) {\n  return e(n, t, \"local\");\n}\nfunction s(n, t) {\n  return e(n, t, \"sync\");\n}\nfunction u(n, t) {\n  return o(n, t, \"local\");\n}\nfunction i(n, t) {\n  return o(n, t, \"sync\");\n}\nexport { u as createChromeStorageStateHookLocal, i as createChromeStorageStateHookSync, c as useChromeStorageLocal, s as useChromeStorageSync };","map":{"version":3,"mappings":";;;;WAWyCA,GAAKC,GAAcC;EACxD,SAAwBC,EAAS;MAAA,OACE,yBAAaF,MAAiBA;IAAAA;IAAAA;IAD1DG;IAAAA,MAGgBD,EAASD;IAAAA;IAAzBG;IAAAA,MACmBF,EAASC;IAAAA;IAA5BE;IAAOC;IAAAA,MAC0BJ,GAAS;IAAA;IAA1CK;IAAcC;IAAAA,MACKN,EAAS;IAAA;IAA5BO;IAAOC;EAEdC,EAAU;ICnBL,WAACZ,GAAKa,GAAcX;MACrB,aAAgCY,MAAjBD,IAA6Bb,wBAAQA,GAAMa;MAC1D,mBAAmB,UAACE,GAASC;QACzBC,OAAOC,QAAQhB,GAAaiB,IAAIC,GAAQC;UACpC,QAAcJ,OAAOK,QAAQC;UAC7B,IAAIb,GAAO,SAAcA;UACzBK,EAAQM,EAAMrB;QAAAA;MAAAA;IAAAA,GDcVA,GAAKI,GAAeC,GAC3BmB,KAAKC;MACFlB,EAASkB,IACThB,GAAgB,IAChBE,EAAS;IAAA,GAEZe,MAAMhB;MACHD,GAAgB,IAChBE,EAASD;IAAAA;EAAAA,GAElB,CAACV,GAAKI,GAAeC;EAExB,QAAoBsB,EAAaC;IAC7B,QAAoC,yBAAaA,EAAStB,KAASsB;ICvBlE,WAAC5B,GAAK6B,GAAO3B;MAAAA,mBACK,UAACa,GAASC;QACzBC,OAAOC,QAAQhB,GAAa4B,wBAAM9B,GAAM6B,IAAQ;UAC5C,QAAcZ,OAAOK,QAAQC;UAC7Bb,IAAQM,EAAON,KAASK;QAAAA;MAAAA;IAAAA,GDoBpBf,GAAK+B,GAAS1B,GACrBmB,KAAK;MACFf,GAAgB,IAChBE,EAAS;IAAA,GAEZe,MAAMhB;MAEHH,EAASwB,IACTtB,GAAgB,IAChBE,EAASD;IAAAA;EAAAA,GAElB,CAACL,GAAcL,GAAKM;EAgBvB,OAdAM,EAAU;IACN,QAAiB,WAACoB,MAASC;MACnBA,MAAa5B,KAAgBL,cAC7BO,EAASyB,KAAQhC,GAAK4B,WACtBnB,GAAgB,IAChBE,EAAS;IAAA;IAIjB,OADAM,OAAOC,QAAQgB,UAAUC,YAAYC,IAC9B;MACHnB,OAAOC,QAAQgB,UAAUG,eAAeD;IAAAA;EAAAA,GAE7C,CAACpC,GAAKK,KAEF,CAACC,GAAOgC,GAAa9B,GAAcE;AAAAA;AAAAA,WE1DOV,GAAKC,GAAcC;EACpE,QAAkB;EAElB;IACI,SAA+CqC,EAAiBvC,GAAKC,GAAcC;MAAAA;MAA5E2B;MAAOW;MAAUhC;MAAcE;MAA6CR,IAE/DyB,EAAYC;QAAAA,2CACvBa;UAAA;QAAA;UAAL,oDACIC;YAAAA,IADCC;YACDD,GAASd;UAAAA;QAAAA;UAAAA;QAAAA;UAAAA;QAAAA;MAAAA,GAEd;IASH,OAPAhB,EAAU;MAAA,OACNgC,EAAUC,KAAKL,IACR;QACHI,EAAUE,OAAOF,EAAUG,QAAQP,IAAW;MAAA;IAAA,GAEnD,CAACA,KAEG,CAACX,GAAOmB,GAAaxC,GAAcE;EAAAA;AAAAA;ACRlD,WAA+BV,GAAKC;EAChC,SAAwBD,GAAKC,GAAc;AAAA;AAc/C,WAA8BD,GAAKC;EAC/B,SAAwBD,GAAKC,GAAc;AAAA;AAW/C,WAA2CD,GAAKC;EAC5C,SAAoCD,GAAKC,GAAc;AAAA;AAW3D,WAA0CD,GAAKC;EAC3C,SAAoCD,GAAKC,GAAc;AAAA;AAAA","names":["key","initialValue","storageArea","useState","INITIAL_VALUE","STORAGE_AREA","state","setState","isPersistent","setIsPersistent","error","setError","useEffect","defaultValue","undefined","resolve","reject","chrome","storage","get","keyObj","items","runtime","lastError","then","res","catch","useCallback","newValue","value","set","toStore","changes","areaName","onChanged","addListener","onChange","removeListener","updateValue","useChromeStorage","setValue","s","consumer","t","consumers","push","splice","indexOf","setValueAll"],"sources":["C:\\Users\\olive\\Uni\\Projects\\ifetch-chatApplication\\chat_application\\node_modules\\use-chrome-storage\\src\\useChromeStorage.js","C:\\Users\\olive\\Uni\\Projects\\ifetch-chatApplication\\chat_application\\node_modules\\use-chrome-storage\\src\\storage.js","C:\\Users\\olive\\Uni\\Projects\\ifetch-chatApplication\\chat_application\\node_modules\\use-chrome-storage\\src\\createChromeStorageStateHook.js","C:\\Users\\olive\\Uni\\Projects\\ifetch-chatApplication\\chat_application\\node_modules\\use-chrome-storage\\src\\index.js"],"sourcesContent":["import {useCallback, useEffect, useState} from 'react';\r\nimport {storage} from './storage';\r\n\r\n\r\n/**\r\n * Basic hook for storage\r\n * @param {string} key\r\n * @param {*} initialValue\r\n * @param {'local'|'sync'} storageArea\r\n * @returns {[*, function(*= any): void, boolean, string]}\r\n */\r\nexport default function useChromeStorage(key, initialValue, storageArea) {\r\n    const [INITIAL_VALUE] = useState(() => {\r\n        return typeof initialValue === 'function' ? initialValue() : initialValue;\r\n    });\r\n    const [STORAGE_AREA] = useState(storageArea);\r\n    const [state, setState] = useState(INITIAL_VALUE);\r\n    const [isPersistent, setIsPersistent] = useState(true);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        storage.get(key, INITIAL_VALUE, STORAGE_AREA)\r\n            .then(res => {\r\n                setState(res);\r\n                setIsPersistent(true);\r\n                setError('');\r\n            })\r\n            .catch(error => {\r\n                setIsPersistent(false);\r\n                setError(error);\r\n            });\r\n    }, [key, INITIAL_VALUE, STORAGE_AREA]);\r\n\r\n    const updateValue = useCallback((newValue) => {\r\n        const toStore = typeof newValue === 'function' ? newValue(state) : newValue;\r\n        storage.set(key, toStore, STORAGE_AREA)\r\n            .then(() => {\r\n                setIsPersistent(true);\r\n                setError('');\r\n            })\r\n            .catch(error => {\r\n                // set newValue to local state because chrome.storage.onChanged won't be fired in error case\r\n                setState(toStore);\r\n                setIsPersistent(false);\r\n                setError(error);\r\n            });\r\n    }, [STORAGE_AREA, key, state]);\r\n\r\n    useEffect(() => {\r\n        const onChange = (changes, areaName) => {\r\n            if (areaName === STORAGE_AREA && key in changes) {\r\n                setState(changes[key].newValue);\r\n                setIsPersistent(true);\r\n                setError('');\r\n            }\r\n        };\r\n        chrome.storage.onChanged.addListener(onChange);\r\n        return () => {\r\n            chrome.storage.onChanged.removeListener(onChange);\r\n        };\r\n    }, [key, STORAGE_AREA]);\r\n\r\n    return [state, updateValue, isPersistent, error];\r\n}\r\n","export const storage = {\r\n    get: (key, defaultValue, storageArea) => {\r\n        const keyObj = defaultValue === undefined ? key : {[key]: defaultValue};\r\n        return new Promise((resolve, reject) => {\r\n            chrome.storage[storageArea].get(keyObj, items => {\r\n                const error = chrome.runtime.lastError;\r\n                if (error) return reject(error);\r\n                resolve(items[key]);\r\n            });\r\n        });\r\n    },\r\n    set: (key, value, storageArea) => {\r\n        return new Promise((resolve, reject) => {\r\n            chrome.storage[storageArea].set({[key]: value}, () => {\r\n                const error = chrome.runtime.lastError;\r\n                error ? reject(error) : resolve();\r\n            });\r\n        });\r\n    },\r\n};\r\n","import {useCallback, useEffect} from 'react';\r\nimport useChromeStorage from './useChromeStorage';\r\n\r\n\r\nexport default function createChromeStorageStateHook(key, initialValue, storageArea) {\r\n    const consumers = [];\r\n\r\n    return function useCreateChromeStorageHook() {\r\n        const [value, setValue, isPersistent, error] = useChromeStorage(key, initialValue, storageArea);\r\n\r\n        const setValueAll = useCallback(newValue => {\r\n            for (const consumer of consumers) {\r\n                consumer(newValue);\r\n            }\r\n        }, []);\r\n\r\n        useEffect(() => {\r\n            consumers.push(setValue);\r\n            return () => {\r\n                consumers.splice(consumers.indexOf(setValue), 1);\r\n            };\r\n        }, [setValue]);\r\n\r\n        return [value, setValueAll, isPersistent, error];\r\n    };\r\n}\r\n","import useChromeStorage from './useChromeStorage';\r\nimport createChromeStorageStateHook from './createChromeStorageStateHook';\r\n\r\n\r\n/**\r\n * Hook which will use `chrome.storage.local` to persist state.\r\n *\r\n * @param {string} key - they key name in chrome's storage. Nested keys not supported\r\n * @param {*} [initialValue] - default value to use\r\n * @returns {[any, (value: any) => void, boolean, string]} - array of\r\n *      stateful `value`,\r\n *      function to update this `value`,\r\n *      `isPersistent` - will be `false` if error occurred during reading/writing chrome.storage,\r\n *      `error` - will contain error appeared in storage. if isPersistent is true will be empty string\r\n */\r\nfunction useChromeStorageLocal(key, initialValue) {\r\n    return useChromeStorage(key, initialValue, 'local');\r\n}\r\n\r\n/**\r\n * Hook which will use `chrome.storage.sync` to persist state.\r\n *\r\n * @param {string} key - they key name in chrome's storage. Nested keys not supported\r\n * @param {*} [initialValue] - default value to use\r\n * @returns {[any, (value: any) => void, boolean, string]} - array of\r\n *      stateful `value`,\r\n *      function to update this `value`,\r\n *      `isPersistent` - will be `false` if error occurred during reading/writing chrome.storage,\r\n *      `error` - will contain error appeared in storage. if isPersistent is true will be empty string\r\n */\r\nfunction useChromeStorageSync(key, initialValue) {\r\n    return useChromeStorage(key, initialValue, 'sync');\r\n}\r\n\r\n/**\r\n * Use to create state with chrome.storage.local.\r\n * Useful if you want to reuse same state across components and/or context (like in popup, content script, background pages)\r\n *\r\n * @param {string} key - they key name in chrome's storage. Nested keys not supported\r\n * @param {*} [initialValue] - default value to use\r\n * @returns {function(): [any, (value: any) => void, boolean, string]}\r\n */\r\nfunction createChromeStorageStateHookLocal(key, initialValue) {\r\n    return createChromeStorageStateHook(key, initialValue, 'local');\r\n}\r\n\r\n/**\r\n * Use to create state with chrome.storage.sync.\r\n * Useful if you want to reuse same state across components and/or context (like in popup, content script, background pages)\r\n *\r\n * @param {string} key - they key name in chrome's storage. Nested keys not supported\r\n * @param {*} [initialValue] - default value to use\r\n * @returns {function(): [any, (value: any) => void, boolean, string]}\r\n */\r\nfunction createChromeStorageStateHookSync(key, initialValue) {\r\n    return createChromeStorageStateHook(key, initialValue, 'sync');\r\n}\r\n\r\nexport {\r\n    useChromeStorageLocal,\r\n    useChromeStorageSync,\r\n    createChromeStorageStateHookLocal,\r\n    createChromeStorageStateHookSync,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}