{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\nimport _classCallCheck from \"C:/Users/olive/Uni/Projects/ifetch-chatApplication/chat_application/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/olive/Uni/Projects/ifetch-chatApplication/chat_application/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar _EventSubscription = /*#__PURE__*/function () {\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n  function _EventSubscription(subscriber) {\n    _classCallCheck(this, _EventSubscription);\n    this.subscriber = subscriber;\n  }\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n  _createClass(_EventSubscription, [{\n    key: \"remove\",\n    value: function remove() {\n      this.subscriber.removeSubscription(this);\n    }\n  }]);\n  return _EventSubscription;\n}();\nexport default _EventSubscription;","map":{"version":3,"names":["_EventSubscription","subscriber","removeSubscription"],"sources":["C:/Users/olive/Uni/Projects/ifetch-chatApplication/chat_application/node_modules/react-native-web/dist/vendor/react-native/emitter/_EventSubscription.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n'use strict';\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\nclass _EventSubscription {\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n  constructor(subscriber) {\n    this.subscriber = subscriber;\n  }\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n\n\n  remove() {\n    this.subscriber.removeSubscription(this);\n  }\n\n}\n\nexport default _EventSubscription;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AAHA;AAAA;AAAA,IAIMA,kBAAkB;EACtB;AACF;AACA;AACA;EACE,4BAAYC,UAAU,EAAE;IAAA;IACtB,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC9B;EACA;AACF;AACA;EAFE;IAAA;IAAA,OAKA,kBAAS;MACP,IAAI,CAACA,UAAU,CAACC,kBAAkB,CAAC,IAAI,CAAC;IAC1C;EAAC;EAAA;AAAA;AAIH,eAAeF,kBAAkB"},"metadata":{},"sourceType":"module"}