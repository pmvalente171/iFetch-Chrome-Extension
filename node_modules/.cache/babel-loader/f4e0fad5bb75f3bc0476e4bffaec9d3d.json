{"ast":null,"code":"/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styleq = void 0;\nvar cache = new WeakMap();\nvar compiledKey = '$$css';\nfunction createStyleq(options) {\n  var disableCache;\n  var disableMix;\n  var transform;\n  if (options != null) {\n    disableCache = options.disableCache === true;\n    disableMix = options.disableMix === true;\n    transform = options.transform;\n  }\n  return function styleq() {\n    // Keep track of property commits to the className\n    var definedProperties = []; // The className and inline style to build up\n\n    var className = '';\n    var inlineStyle = null; // The current position in the cache graph\n\n    var nextCache = disableCache ? null : cache; // This way of creating an array from arguments is fastest\n\n    var styles = new Array(arguments.length);\n    for (var i = 0; i < arguments.length; i++) {\n      styles[i] = arguments[i];\n    } // Iterate over styles from last to first\n\n    while (styles.length > 0) {\n      var possibleStyle = styles.pop(); // Skip empty items\n\n      if (possibleStyle == null || possibleStyle === false) {\n        continue;\n      } // Push nested styles back onto the stack to be processed\n\n      if (Array.isArray(possibleStyle)) {\n        for (var _i = 0; _i < possibleStyle.length; _i++) {\n          styles.push(possibleStyle[_i]);\n        }\n        continue;\n      } // Process an individual style object\n\n      var style = transform != null ? transform(possibleStyle) : possibleStyle;\n      if (style[compiledKey]) {\n        // Build up the class names defined by this object\n        var classNameChunk = ''; // Check the cache to see if we've already done this work\n\n        if (nextCache != null && nextCache.has(style)) {\n          // Cache: read\n          var cacheEntry = nextCache.get(style);\n          if (cacheEntry != null) {\n            classNameChunk = cacheEntry[0]; // $FlowIgnore\n\n            definedProperties.push.apply(definedProperties, cacheEntry[1]);\n            nextCache = cacheEntry[2];\n          }\n        } // Update the chunks with data from this object\n        else {\n          // The properties defined by this object\n          var definedPropertiesChunk = [];\n          for (var prop in style) {\n            var value = style[prop];\n            if (prop === compiledKey) continue; // Each property value is used as an HTML class name\n            // { 'debug.string': 'debug.string', opacity: 's-jskmnoqp' }\n\n            if (typeof value === 'string') {\n              // Only add to chunks if this property hasn't already been seen\n              if (!definedProperties.includes(prop)) {\n                classNameChunk += classNameChunk ? ' ' + value : value;\n                definedProperties.push(prop);\n                if (nextCache != null) {\n                  definedPropertiesChunk.push(prop);\n                }\n              }\n            } // If we encounter a value that isn't a string\n            else {\n              console.error(\"styleq: \".concat(prop, \" typeof \").concat(value, \" is not \\\"string\\\".\"));\n            }\n          } // Cache: write\n\n          if (nextCache != null) {\n            // Create the next WeakMap for this sequence of styles\n            var weakMap = new WeakMap();\n            nextCache.set(style, [classNameChunk, definedPropertiesChunk, weakMap]);\n            nextCache = weakMap;\n          }\n        } // Order of classes in chunks matches property-iteration order of style\n        // object. Order of chunks matches passed order of styles from first to\n        // last (which we iterate over in reverse).\n\n        if (classNameChunk) {\n          className = className ? classNameChunk + ' ' + className : classNameChunk;\n        }\n      } // ----- DYNAMIC: Process inline style object -----\n      else {\n        if (disableMix) {\n          if (inlineStyle == null) {\n            inlineStyle = {};\n          }\n          inlineStyle = Object.assign({}, style, inlineStyle);\n        } else {\n          var subStyle = null;\n          for (var _prop in style) {\n            var _value = style[_prop];\n            if (_value !== undefined) {\n              if (!definedProperties.includes(_prop)) {\n                if (_value != null) {\n                  if (inlineStyle == null) {\n                    inlineStyle = {};\n                  }\n                  if (subStyle == null) {\n                    subStyle = {};\n                  }\n                  subStyle[_prop] = _value;\n                }\n                definedProperties.push(_prop); // Cache is unnecessary overhead if results can't be reused.\n\n                nextCache = null;\n              }\n            }\n          }\n          if (subStyle != null) {\n            inlineStyle = Object.assign(subStyle, inlineStyle);\n          }\n        }\n      }\n    }\n    var styleProps = [className, inlineStyle];\n    return styleProps;\n  };\n}\nvar styleq = createStyleq();\nexports.styleq = styleq;\nstyleq.factory = createStyleq;","map":{"version":3,"names":["Object","defineProperty","exports","value","styleq","cache","WeakMap","compiledKey","createStyleq","options","disableCache","disableMix","transform","definedProperties","className","inlineStyle","nextCache","styles","Array","arguments","length","i","possibleStyle","pop","isArray","_i","push","style","classNameChunk","has","cacheEntry","get","apply","definedPropertiesChunk","prop","includes","console","error","concat","weakMap","set","assign","subStyle","_prop","_value","undefined","styleProps","factory"],"sources":["C:/Users/olive/Uni/Projects/ifetch-chatApplication/chat_application/node_modules/styleq/dist/styleq.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styleq = void 0;\nvar cache = new WeakMap();\nvar compiledKey = '$$css';\n\nfunction createStyleq(options) {\n  var disableCache;\n  var disableMix;\n  var transform;\n\n  if (options != null) {\n    disableCache = options.disableCache === true;\n    disableMix = options.disableMix === true;\n    transform = options.transform;\n  }\n\n  return function styleq() {\n    // Keep track of property commits to the className\n    var definedProperties = []; // The className and inline style to build up\n\n    var className = '';\n    var inlineStyle = null; // The current position in the cache graph\n\n    var nextCache = disableCache ? null : cache; // This way of creating an array from arguments is fastest\n\n    var styles = new Array(arguments.length);\n\n    for (var i = 0; i < arguments.length; i++) {\n      styles[i] = arguments[i];\n    } // Iterate over styles from last to first\n\n\n    while (styles.length > 0) {\n      var possibleStyle = styles.pop(); // Skip empty items\n\n      if (possibleStyle == null || possibleStyle === false) {\n        continue;\n      } // Push nested styles back onto the stack to be processed\n\n\n      if (Array.isArray(possibleStyle)) {\n        for (var _i = 0; _i < possibleStyle.length; _i++) {\n          styles.push(possibleStyle[_i]);\n        }\n\n        continue;\n      } // Process an individual style object\n\n\n      var style = transform != null ? transform(possibleStyle) : possibleStyle;\n\n      if (style[compiledKey]) {\n        // Build up the class names defined by this object\n        var classNameChunk = ''; // Check the cache to see if we've already done this work\n\n        if (nextCache != null && nextCache.has(style)) {\n          // Cache: read\n          var cacheEntry = nextCache.get(style);\n\n          if (cacheEntry != null) {\n            classNameChunk = cacheEntry[0]; // $FlowIgnore\n\n            definedProperties.push.apply(definedProperties, cacheEntry[1]);\n            nextCache = cacheEntry[2];\n          }\n        } // Update the chunks with data from this object\n        else {\n          // The properties defined by this object\n          var definedPropertiesChunk = [];\n\n          for (var prop in style) {\n            var value = style[prop];\n            if (prop === compiledKey) continue; // Each property value is used as an HTML class name\n            // { 'debug.string': 'debug.string', opacity: 's-jskmnoqp' }\n\n            if (typeof value === 'string') {\n              // Only add to chunks if this property hasn't already been seen\n              if (!definedProperties.includes(prop)) {\n                classNameChunk += classNameChunk ? ' ' + value : value;\n                definedProperties.push(prop);\n\n                if (nextCache != null) {\n                  definedPropertiesChunk.push(prop);\n                }\n              }\n            } // If we encounter a value that isn't a string\n            else {\n              console.error(\"styleq: \".concat(prop, \" typeof \").concat(value, \" is not \\\"string\\\".\"));\n            }\n          } // Cache: write\n\n\n          if (nextCache != null) {\n            // Create the next WeakMap for this sequence of styles\n            var weakMap = new WeakMap();\n            nextCache.set(style, [classNameChunk, definedPropertiesChunk, weakMap]);\n            nextCache = weakMap;\n          }\n        } // Order of classes in chunks matches property-iteration order of style\n        // object. Order of chunks matches passed order of styles from first to\n        // last (which we iterate over in reverse).\n\n\n        if (classNameChunk) {\n          className = className ? classNameChunk + ' ' + className : classNameChunk;\n        }\n      } // ----- DYNAMIC: Process inline style object -----\n      else {\n        if (disableMix) {\n          if (inlineStyle == null) {\n            inlineStyle = {};\n          }\n\n          inlineStyle = Object.assign({}, style, inlineStyle);\n        } else {\n          var subStyle = null;\n\n          for (var _prop in style) {\n            var _value = style[_prop];\n\n            if (_value !== undefined) {\n              if (!definedProperties.includes(_prop)) {\n                if (_value != null) {\n                  if (inlineStyle == null) {\n                    inlineStyle = {};\n                  }\n\n                  if (subStyle == null) {\n                    subStyle = {};\n                  }\n\n                  subStyle[_prop] = _value;\n                }\n\n                definedProperties.push(_prop); // Cache is unnecessary overhead if results can't be reused.\n\n                nextCache = null;\n              }\n            }\n          }\n\n          if (subStyle != null) {\n            inlineStyle = Object.assign(subStyle, inlineStyle);\n          }\n        }\n      }\n    }\n\n    var styleProps = [className, inlineStyle];\n    return styleProps;\n  };\n}\n\nvar styleq = createStyleq();\nexports.styleq = styleq;\nstyleq.factory = createStyleq;"],"mappings":"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"},"metadata":{},"sourceType":"script"}